{% extends 'base.html' %}

{% block location_active %}active{% endblock %}

{% block title %}Location Analysis | MediDash{% endblock %}

{% block extra_css %}
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
  integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
<style>
  #map {
    height: 500px;
    width: 100%;
    border-radius: 5px;
  }

  .marker-pin {
    border-radius: 50%;
    width: 20px;
    height: 20px;
    border: 2px solid #fff;
    text-align: center;
    line-height: 20px;
    font-weight: bold;
    color: white;
  }

  .marker-high {
    background-color: #dc3545;
  }

  .marker-medium {
    background-color: #ffc107;
  }

  .marker-low {
    background-color: #28a745;
  }

  .legend {
    background: white;
    padding: 10px;
    border-radius: 5px;
    line-height: 24px;
    color: #333;
  }

  .legend i {
    width: 20px;
    height: 20px;
    float: left;
    margin-right: 8px;
    opacity: 0.8;
    border-radius: 50%;
  }

  .env-chart-container,
  .resource-chart-container {
    height: 350px;
  }

  .metric-card {
    transition: transform 0.3s ease;
    cursor: pointer;
  }

  .metric-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }

  .table-responsive {
    max-height: 500px;
    overflow-y: auto;
  }
</style>
{% endblock %}

{% block content %}
<div class="row mb-4">
  <div class="col-md-12">
    <div class="card">
      <div class="card-header">
        <h5>Location Health Risk Analysis</h5>
      </div>
      <div class="card-body">
        <p class="mb-3">This page provides analysis of health risks across different geographical locations based on
          current and historical data.</p>
      </div>
    </div>
  </div>
</div>

<!-- Summary Metrics -->
<div class="row mb-4">
  {% if location_data %}
  <div class="col-md-3">
    <div class="card metric-card bg-primary text-white">
      <div class="card-body">
        <h6 class="card-subtitle mb-2">Total Locations</h6>
        <h2>{{ location_data|length }}</h2>
        <p class="small mb-0">Monitored geographic areas</p>
      </div>
    </div>
  </div>

  <div class="col-md-3">
    <div class="card metric-card bg-success text-white">
      <div class="card-body">
        <h6 class="card-subtitle mb-2">Low Risk Areas</h6>
        {% with low_risk_areas=0 %}
          {% for location in location_data %}
            {% if location.high_risk_percentage < 10 %}
              {% with low_risk_areas=low_risk_areas|add:"1" %}
              {% endwith %}
            {% endif %}
          {% endfor %}
          <h2>{{ low_risk_areas }}</h2>
          <p class="small mb-0">Locations with &lt;10% high-risk cases</p>
        {% endwith %}
      </div>
    </div>
  </div>

  <div class="col-md-3">
    <div class="card metric-card bg-warning text-white">
      <div class="card-body">
        <h6 class="card-subtitle mb-2">Medium Risk Areas</h6>
        {% with med_risk_areas=0 %}
          {% for location in location_data %}
            {% if location.high_risk_percentage >= 10 and location.high_risk_percentage < 30 %}
              {% with med_risk_areas=med_risk_areas|add:"1" %}
              {% endwith %}
            {% endif %}
          {% endfor %}
          <h2>{{ med_risk_areas }}</h2>
          <p class="small mb-0">Locations with 10-30% high-risk cases</p>
        {% endwith %}
      </div>
    </div>
  </div>

  <div class="col-md-3">
    <div class="card metric-card bg-danger text-white">
      <div class="card-body">
        <h6 class="card-subtitle mb-2">High Risk Areas</h6>
        {% with high_risk_areas=0 %}
          {% for location in location_data %}
            {% if location.high_risk_percentage >= 30 %}
              {% with high_risk_areas=high_risk_areas|add:"1" %}
              {% endwith %}
            {% endif %}
          {% endfor %}
          <h2>{{ high_risk_areas }}</h2>
          <p class="small mb-0">Locations with &gt;30% high-risk cases</p>
        {% endwith %}
      </div>
    </div>
  </div>
  {% endif %}
</div>

<div class="row mb-4">
  <div class="col-md-12">
    <div class="card">
      <div class="card-header">
        <h5>Location Risk Map</h5>
      </div>
      <div class="card-body">
        <div id="map"></div>
        <div class="mt-3">
          <div class="d-flex justify-content-center">
            <div class="px-2"><span class="badge bg-success">&nbsp;</span> Low Risk</div>
            <div class="px-2"><span class="badge bg-warning">&nbsp;</span> Medium Risk</div>
            <div class="px-2"><span class="badge bg-danger">&nbsp;</span> High Risk</div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="row mb-4">
  <div class="col-md-12">
    <div class="card">
      <div class="card-header d-flex justify-content-between align-items-center">
        <h5>Location Statistics</h5>
        <div class="form-inline">
          <label class="mr-2" for="locationFilter">Filter: </label>
          <select class="form-control form-control-sm" id="locationFilter">
            <option value="all">All Locations</option>
            <option value="high">High Risk Only</option>
            <option value="medium">Medium Risk Only</option>
            <option value="low">Low Risk Only</option>
          </select>
        </div>
      </div>
      <div class="card-body">
        <div class="table-responsive">
          <table class="table table-striped table-hover" id="locationsTable">
            <thead>
              <tr>
                <th>Location</th>
                <th>Type</th>
                <th>Total Records</th>
                <th>High Risk %</th>
                <th>Severe Cases</th>
                <th>Environmental Quality</th>
              </tr>
            </thead>
            <tbody>
              {% for location in location_data %}
              <tr
                data-risk-level="{% if location.high_risk_percentage >= 30 %}high{% elif location.high_risk_percentage >= 10 %}medium{% else %}low{% endif %}">
                <td>{{ location.name }}</td>
                <td>{{ location.type }}</td>
                <td>{{ location.record_count }}</td>
                <td>
                  <div class="d-flex align-items-center">
                    <div class="progress flex-grow-1 me-2" style="height: 10px;">
                      <div class="progress-bar bg-danger" role="progressbar"
                        style="width: {{ location.high_risk_percentage }}%"
                        aria-valuenow="{{ location.high_risk_percentage }}" aria-valuemin="0" aria-valuemax="100"></div>
                    </div>
                    <span>{{ location.high_risk_percentage }}%</span>
                  </div>
                </td>
                <td>{{ location.severe_cases }}</td>
                <td>
                  {% if location.env_quality == 'Good' %}
                  <span class="badge bg-success">{{ location.env_quality }}</span>
                  {% elif location.env_quality == 'Moderate' %}
                  <span class="badge bg-warning">{{ location.env_quality }}</span>
                  {% else %}
                  <span class="badge bg-danger">{{ location.env_quality }}</span>
                  {% endif %}
                </td>
              </tr>
              {% endfor %}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="row mb-4">
  <div class="col-md-6">
    <div class="card">
      <div class="card-header">
        <h5>Environmental Factors by Location</h5>
      </div>
      <div class="card-body">
        <div class="env-chart-container">
          <canvas id="environmentChart"></canvas>
        </div>
      </div>
    </div>
  </div>
  <div class="col-md-6">
    <div class="card">
      <div class="card-header">
        <h5>Healthcare Resources by Location</h5>
      </div>
      <div class="card-body">
        <div class="resource-chart-container">
          <canvas id="resourceChart"></canvas>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="row mb-4">
  <div class="col-md-12">
    <div class="card">
      <div class="card-header">
        <h5>Risk Distribution by Location</h5>
      </div>
      <div class="card-body">
        <div class="row">
          {% for location_name, risk_data in risk_summary.items %}
          <div class="col-md-4 mb-4">
            <div class="card">
              <div class="card-header">
                <h6>{{ location_name }}</h6>
              </div>
              <div class="card-body">
                <canvas id="riskChart{{ forloop.counter }}" height="200"></canvas>
              </div>
            </div>
          </div>
          {% endfor %}
        </div>
      </div>
    </div>
  </div>
</div>
{% endblock %}

{% block extra_js %}
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
  integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
<script>
  // Initialize map
  const map = L.map('map').setView([40.7, -74.0], 11);

  // Add tile layer (OpenStreetMap)
  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
  }).addTo(map);

  // Add location markers
  const mapData = {{ map_data|safe }};
  
  // Create a legend
  const legend = L.control({ position: 'bottomright' });
  
  legend.onAdd = function (map) {
    const div = L.DomUtil.create('div', 'legend');
    div.innerHTML = `
      <h6>Risk Level</h6>
      <div><i style="background: #28a745"></i> Low Risk</div>
      <div><i style="background: #ffc107"></i> Medium Risk</div>
      <div><i style="background: #dc3545"></i> High Risk</div>
    `;
    return div;
  };
  
  legend.addTo(map);

  // Add markers for each location
  mapData.forEach(location => {
    // Create marker with appropriate color based on risk level
    const markerColor = location.risk_level === 'high' ? 'marker-high' : 
                        location.risk_level === 'medium' ? 'marker-medium' : 'marker-low';
    
    const markerIcon = L.divIcon({
      className: `marker-pin ${markerColor}`,
      html: `<span>${location.case_count > 999 ? '999+' : location.case_count}</span>`,
      iconSize: [30, 30],
      iconAnchor: [15, 15]
    });
    
    const marker = L.marker([location.lat, location.lon], { icon: markerIcon }).addTo(map);
    
    // Add popup with location info
    marker.bindPopup(`
      <strong>${location.name}</strong><br>
      Case Count: ${location.case_count}<br>
      Risk Level: ${location.risk_level.charAt(0).toUpperCase() + location.risk_level.slice(1)}
    `);
  });

  // Adjust map view to fit all markers
  if (mapData.length > 0) {
    const bounds = [];
    mapData.forEach(location => {
      bounds.push([location.lat, location.lon]);
    });
    map.fitBounds(bounds);
  }

  // Initialize environmental factors chart
  const envCtx = document.getElementById('environmentChart').getContext('2d');
  const environmentChart = new Chart(envCtx, {
    type: 'bar',
    data: {
      labels: {{ environment_data.labels|safe }},
      datasets: [
        {
          label: 'Air Quality Index',
          data: {{ environment_data.aqi|safe }},
          backgroundColor: 'rgba(255, 99, 132, 0.7)',
          borderColor: 'rgba(255, 99, 132, 1)',
          borderWidth: 1
        },
        {
          label: 'Temperature (°C)',
          data: {{ environment_data.temperature|safe }},
          backgroundColor: 'rgba(54, 162, 235, 0.7)',
          borderColor: 'rgba(54, 162, 235, 1)',
          borderWidth: 1
        },
        {
          label: 'Humidity (%)',
          data: {{ environment_data.humidity|safe }},
          backgroundColor: 'rgba(75, 192, 192, 0.7)',
          borderColor: 'rgba(75, 192, 192, 1)',
          borderWidth: 1
        }
      ]
    },
    options: {
      responsive: true,
      maintainAspectRatio: false,
      scales: {
        y: {
          beginAtZero: true
        }
      }
    }
  });

  // Initialize healthcare resources chart
  const resourceCtx = document.getElementById('resourceChart').getContext('2d');
  const resourceChart = new Chart(resourceCtx, {
    type: 'radar',
    data: {
      labels: {{ resource_data.labels|safe }},
      datasets: [
        {
          label: 'Hospital Capacity',
          data: {{ resource_data.hospital_capacity|safe }},
          backgroundColor: 'rgba(255, 99, 132, 0.2)',
          borderColor: 'rgba(255, 99, 132, 1)',
          borderWidth: 1,
          pointBackgroundColor: 'rgba(255, 99, 132, 1)'
        },
        {
          label: 'Medical Personnel',
          data: {{ resource_data.personnel|safe }},
          backgroundColor: 'rgba(54, 162, 235, 0.2)',
          borderColor: 'rgba(54, 162, 235, 1)',
          borderWidth: 1,
          pointBackgroundColor: 'rgba(54, 162, 235, 1)'
        },
        {
          label: 'Resource Utilization',
          data: {{ resource_data.resource_util|safe }},
          backgroundColor: 'rgba(255, 206, 86, 0.2)',
          borderColor: 'rgba(255, 206, 86, 1)',
          borderWidth: 1,
          pointBackgroundColor: 'rgba(255, 206, 86, 1)'
        }
      ]
    },
    options: {
      responsive: true,
      maintainAspectRatio: false,
      scales: {
        r: {
          angleLines: {
            display: true
          },
          suggestedMin: 0,
          suggestedMax: 100
        }
      }
    }
  });

  // Initialize risk distribution charts for each location
  {% for location_name, risk_data in risk_summary.items %}
  const riskCtx{{ forloop.counter }} = document.getElementById('riskChart{{ forloop.counter }}').getContext('2d');
  const riskChart{{ forloop.counter }} = new Chart(riskCtx{{ forloop.counter }}, {
    type: 'doughnut',
    data: {
      labels: ['High Risk', 'Medium Risk', 'Low Risk'],
      datasets: [{
        data: [
          {{ risk_data.High_Risk }},
          {{ risk_data.Medium_Risk }},
          {{ risk_data.Low_Risk }}
        ],
        backgroundColor: [
          'rgba(255, 99, 132, 0.7)',
          'rgba(255, 206, 86, 0.7)',
          'rgba(75, 192, 192, 0.7)'
        ],
        borderWidth: 1
      }]
    },
    options: {
      responsive: true,
      maintainAspectRatio: false,
      plugins: {
        legend: {
          position: 'bottom'
        }
      }
    }
  });
  {% endfor %}

  // Location filter functionality
  document.getElementById('locationFilter').addEventListener('change', filterLocations);

  function filterLocations() {
    const filterValue = document.getElementById('locationFilter').value;
    const rows = document.querySelectorAll('#locationsTable tbody tr');
    
    rows.forEach(row => {
      const riskLevel = row.getAttribute('data-risk-level');
      
      if (filterValue === 'all' || filterValue === riskLevel) {
        row.style.display = '';
      } else {
        row.style.display = 'none';
      }
    });
  }
</script>
{% endblock %}