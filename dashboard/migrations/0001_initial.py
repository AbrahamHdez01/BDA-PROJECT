# Generated by Django 5.1.7 on 2025-03-21 07:14

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Demographics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ethnicity', models.CharField(max_length=50)),
                ('socioeconomic_status', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('transmission_rate', models.FloatField()),
                ('mortality_rate', models.FloatField()),
                ('case_fatality_ratio', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=20)),
                ('population_density', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='HealthcareResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('hospital_capacity', models.CharField(max_length=20)),
                ('personnel_availability', models.CharField(choices=[('Available', 'Available'), ('Limited', 'Limited'), ('Scarce', 'Scarce')], max_length=20)),
                ('resource_utilization', models.FloatField()),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='healthcare_resources', to='dashboard.location')),
            ],
            options={
                'unique_together': {('date', 'location')},
            },
        ),
        migrations.CreateModel(
            name='EnvironmentalFactor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('temperature', models.FloatField()),
                ('air_quality_index', models.IntegerField()),
                ('humidity', models.FloatField()),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='environmental_factors', to='dashboard.location')),
            ],
            options={
                'unique_together': {('date', 'location')},
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField()),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('demographics', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.demographics')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='residents', to='dashboard.location')),
            ],
        ),
        migrations.CreateModel(
            name='MedicalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chronic_conditions', models.IntegerField(default=0)),
                ('vaccination_status', models.IntegerField(default=0)),
                ('medical_notes', models.TextField(blank=True, null=True)),
                ('immunity_level', models.CharField(max_length=20)),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='medical_history', to='dashboard.person')),
            ],
        ),
        migrations.CreateModel(
            name='HealthRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_data_collection', models.DateField()),
                ('reported_symptoms', models.CharField(max_length=50)),
                ('diagnosis', models.CharField(blank=True, max_length=100, null=True)),
                ('testing_results', models.CharField(max_length=20)),
                ('date_of_onset', models.DateField(blank=True, null=True)),
                ('travel_history', models.CharField(max_length=100)),
                ('social_activity', models.CharField(max_length=20)),
                ('compliance_with_health_guidelines', models.BooleanField()),
                ('vaccination_hesitancy', models.BooleanField()),
                ('daily_new_cases', models.IntegerField()),
                ('vaccination_campaign_dates', models.DateField(blank=True, null=True)),
                ('outbreak_status', models.CharField(choices=[('No Outbreak', 'No Outbreak'), ('Potential Outbreak', 'Potential Outbreak'), ('Ongoing Outbreak', 'Ongoing Outbreak'), ('Contained Outbreak', 'Contained Outbreak')], max_length=50)),
                ('infection_risk_level', models.CharField(choices=[('Low Risk', 'Low Risk'), ('Medium Risk', 'Medium Risk'), ('High Risk', 'High Risk')], max_length=20)),
                ('disease_severity', models.CharField(choices=[('None', 'None'), ('Mild', 'Mild'), ('Moderate', 'Moderate'), ('Severe', 'Severe')], max_length=20)),
                ('hospitalization_rate', models.CharField(max_length=20)),
                ('hospitalization_requirement', models.CharField(max_length=50)),
                ('disease', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.disease')),
                ('environmental_factor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_records', to='dashboard.environmentalfactor')),
                ('healthcare_resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_records', to='dashboard.healthcareresource')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_records', to='dashboard.person')),
            ],
            options={
                'verbose_name': 'Health Record',
                'verbose_name_plural': 'Health Records',
                'ordering': ['-date_of_data_collection'],
            },
        ),
    ]
